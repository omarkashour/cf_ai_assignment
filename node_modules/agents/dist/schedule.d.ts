import { z } from "zod";

/**
 * Get the schedule prompt for a given event
 * @param event - The event to get the schedule prompt for
 * @returns The schedule prompt
 */
declare function getSchedulePrompt(event: { date: Date }): string;
/**
 * @deprecated this has been renamed to getSchedulePrompt, and unstable_getSchedulePrompt will be removed in the next major version
 * @param event - The event to get the schedule prompt for
 * @returns The schedule prompt
 */
declare function unstable_getSchedulePrompt(event: { date: Date }): string;
/**
 * The schema for the schedule prompt
 */
declare const scheduleSchema: z.ZodObject<
  {
    description: z.ZodString;
    when: z.ZodObject<
      {
        cron: z.ZodOptional<z.ZodString>;
        date: z.ZodOptional<z.ZodDate>;
        delayInSeconds: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["scheduled", "delayed", "cron", "no-schedule"]>;
      },
      "strip",
      z.ZodTypeAny,
      {
        type: "scheduled" | "delayed" | "cron" | "no-schedule";
        date?: Date | undefined;
        cron?: string | undefined;
        delayInSeconds?: number | undefined;
      },
      {
        type: "scheduled" | "delayed" | "cron" | "no-schedule";
        date?: Date | undefined;
        cron?: string | undefined;
        delayInSeconds?: number | undefined;
      }
    >;
  },
  "strip",
  z.ZodTypeAny,
  {
    description: string;
    when: {
      type: "scheduled" | "delayed" | "cron" | "no-schedule";
      date?: Date | undefined;
      cron?: string | undefined;
      delayInSeconds?: number | undefined;
    };
  },
  {
    description: string;
    when: {
      type: "scheduled" | "delayed" | "cron" | "no-schedule";
      date?: Date | undefined;
      cron?: string | undefined;
      delayInSeconds?: number | undefined;
    };
  }
>;
/**
 * The type for the schedule prompt
 */
type Schedule = z.infer<typeof scheduleSchema>;
/**
 * @deprecated this has been renamed to scheduleSchema, and unstable_scheduleSchema will be removed in the next major version
 * @returns The schedule schema
 */
declare const unstable_scheduleSchema: z.ZodObject<
  {
    description: z.ZodString;
    when: z.ZodObject<
      {
        cron: z.ZodOptional<z.ZodString>;
        date: z.ZodOptional<z.ZodDate>;
        delayInSeconds: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["scheduled", "delayed", "cron", "no-schedule"]>;
      },
      "strip",
      z.ZodTypeAny,
      {
        type: "scheduled" | "delayed" | "cron" | "no-schedule";
        date?: Date | undefined;
        cron?: string | undefined;
        delayInSeconds?: number | undefined;
      },
      {
        type: "scheduled" | "delayed" | "cron" | "no-schedule";
        date?: Date | undefined;
        cron?: string | undefined;
        delayInSeconds?: number | undefined;
      }
    >;
  },
  "strip",
  z.ZodTypeAny,
  {
    description: string;
    when: {
      type: "scheduled" | "delayed" | "cron" | "no-schedule";
      date?: Date | undefined;
      cron?: string | undefined;
      delayInSeconds?: number | undefined;
    };
  },
  {
    description: string;
    when: {
      type: "scheduled" | "delayed" | "cron" | "no-schedule";
      date?: Date | undefined;
      cron?: string | undefined;
      delayInSeconds?: number | undefined;
    };
  }
>;

export {
  type Schedule,
  getSchedulePrompt,
  scheduleSchema,
  unstable_getSchedulePrompt,
  unstable_scheduleSchema
};
